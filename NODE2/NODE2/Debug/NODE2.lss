
NODE2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ea  00800200  00000c74  00000d08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c74  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  008002ea  008002ea  00000df2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000df2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001a8  00000000  00000000  00000e4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012df  00000000  00000000  00000ff6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000851  00000000  00000000  000022d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b96  00000000  00000000  00002b26  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000040c  00000000  00000000  000036bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004cc  00000000  00000000  00003ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000099f  00000000  00000000  00003f94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000148  00000000  00000000  00004933  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	98 c0       	rjmp	.+304    	; 0x146 <__vector_5>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 e7       	ldi	r30, 0x74	; 116
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	aa 3e       	cpi	r26, 0xEA	; 234
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	aa ee       	ldi	r26, 0xEA	; 234
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 30       	cpi	r26, 0x00	; 0
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	d0 d0       	rcall	.+416    	; 0x2c0 <main>
 120:	a7 c5       	rjmp	.+2894   	; 0xc70 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_construct_message>:
void CAN_print(CAN_message_t message){
	printf("\nID %i\tL: %i\tDATA:\n",message.id,message.length);
	for(uint8_t i = 0; i < message.length; i++){
		printf("%i\t",message.data[i]);
	}
}
 124:	90 93 ec 02 	sts	0x02EC, r25
 128:	80 93 eb 02 	sts	0x02EB, r24
 12c:	60 93 ed 02 	sts	0x02ED, r22
 130:	66 23       	and	r22, r22
 132:	41 f0       	breq	.+16     	; 0x144 <CAN_construct_message+0x20>
 134:	8e ee       	ldi	r24, 0xEE	; 238
 136:	92 e0       	ldi	r25, 0x02	; 2
 138:	fc 01       	movw	r30, r24
 13a:	11 92       	st	Z+, r1
 13c:	2e 2f       	mov	r18, r30
 13e:	28 1b       	sub	r18, r24
 140:	26 17       	cp	r18, r22
 142:	d8 f3       	brcs	.-10     	; 0x13a <CAN_construct_message+0x16>
 144:	08 95       	ret

00000146 <__vector_5>:
#if NODE == 1
ISR(INT2_vect){//interrupt incoming message
	receive_flag = 1;
}
#elif NODE == 2
ISR(INT4_vect){//interrupt incoming message
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	8f 93       	push	r24
	receive_flag = 1;
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	80 93 ea 02 	sts	0x02EA, r24
}
 158:	8f 91       	pop	r24
 15a:	0f 90       	pop	r0
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	0f 90       	pop	r0
 160:	1f 90       	pop	r1
 162:	18 95       	reti

00000164 <CAN_interrupt_setup>:
#endif

	
void CAN_interrupt_setup(void){
	cli();
 164:	f8 94       	cli
		
		//General Interrupt Control Register port int2 defined as on?
		GICR |= (1<<INT2);
	#elif NODE == 2
		// Use PE4 as external interrupt pin
		DDRE &= ~(1<<PINE4);
 166:	6c 98       	cbi	0x0d, 4	; 13
	
		// Trigger interrupt on r edge (Compare sec 15.2.2 of Atmega2560 data sheet).
		EICRB &= ~(1<<ISC40);	//x0
 168:	ea e6       	ldi	r30, 0x6A	; 106
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	8e 7f       	andi	r24, 0xFE	; 254
 170:	80 83       	st	Z, r24
		EICRB |= (1<<ISC41);	//1x
 172:	80 81       	ld	r24, Z
 174:	82 60       	ori	r24, 0x02	; 2
 176:	80 83       	st	Z, r24
	
		// Enable INT4 (Compare sec 15.2.3 of Atmega2560 data sheet).
		EIMSK |= (1<<INT4);
 178:	ec 9a       	sbi	0x1d, 4	; 29

		//Enable global interrupt.
		
	
	#endif
	sei();
 17a:	78 94       	sei
 17c:	08 95       	ret

0000017e <CAN_initialize>:
static CAN_message_t CAN_send_buffer;
uint8_t receive_flag = 0;

void CAN_initialize(void){

	MCP2515_initialize();
 17e:	54 d0       	rcall	.+168    	; 0x228 <MCP2515_initialize>

	// Initialize empty message for transmission
	CAN_construct_message(CAN_ID,CAN_MESSAGE_LENGTH);
 180:	68 e0       	ldi	r22, 0x08	; 8
 182:	88 e2       	ldi	r24, 0x28	; 40
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	ce df       	rcall	.-100    	; 0x124 <CAN_construct_message>
	
	// Turn mask/filters off; receive any message AND Enable Rollover
	MCP2515_bit_modify(MCP_RXB0CTRL,0b01100100,0xFF);
 188:	4f ef       	ldi	r20, 0xFF	; 255
 18a:	50 e0       	ldi	r21, 0x00	; 0
 18c:	64 e6       	ldi	r22, 0x64	; 100
 18e:	80 e6       	ldi	r24, 0x60	; 96
 190:	2f d0       	rcall	.+94     	; 0x1f0 <MCP2515_bit_modify>
	MCP2515_bit_modify(MCP_RXB1CTRL,0b01100100,0xFF);
 192:	4f ef       	ldi	r20, 0xFF	; 255
 194:	50 e0       	ldi	r21, 0x00	; 0
 196:	64 e6       	ldi	r22, 0x64	; 100
 198:	80 e7       	ldi	r24, 0x70	; 112
 19a:	2a d0       	rcall	.+84     	; 0x1f0 <MCP2515_bit_modify>
	
	// RX0IE Receive Buffer 0 FUll Interrupt Enable bit
	MCP2515_bit_modify(MCP_CANINTE,0x01,1);
 19c:	41 e0       	ldi	r20, 0x01	; 1
 19e:	50 e0       	ldi	r21, 0x00	; 0
 1a0:	61 e0       	ldi	r22, 0x01	; 1
 1a2:	8b e2       	ldi	r24, 0x2B	; 43
 1a4:	25 d0       	rcall	.+74     	; 0x1f0 <MCP2515_bit_modify>
	
	//set CAN mode
	MCP2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL); 
 1a6:	40 e0       	ldi	r20, 0x00	; 0
 1a8:	50 e0       	ldi	r21, 0x00	; 0
 1aa:	60 ee       	ldi	r22, 0xE0	; 224
 1ac:	8f e0       	ldi	r24, 0x0F	; 15
 1ae:	20 d0       	rcall	.+64     	; 0x1f0 <MCP2515_bit_modify>
	
	// Set up interrupts.
	CAN_interrupt_setup();
 1b0:	d9 df       	rcall	.-78     	; 0x164 <CAN_interrupt_setup>
	
	printf("MCP_CANSTAT: %i\n", MCP2515_read(MCP_CANSTAT));//comment out later
 1b2:	8e e0       	ldi	r24, 0x0E	; 14
 1b4:	0f d0       	rcall	.+30     	; 0x1d4 <MCP2515_read>
 1b6:	9f 93       	push	r25
 1b8:	8f 93       	push	r24
 1ba:	8e e1       	ldi	r24, 0x1E	; 30
 1bc:	92 e0       	ldi	r25, 0x02	; 2
 1be:	9f 93       	push	r25
 1c0:	8f 93       	push	r24
 1c2:	3c d1       	rcall	.+632    	; 0x43c <printf>
	printf("CAN initialized.\n\n");
 1c4:	8f e2       	ldi	r24, 0x2F	; 47
 1c6:	92 e0       	ldi	r25, 0x02	; 2
 1c8:	4a d1       	rcall	.+660    	; 0x45e <puts>
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	08 95       	ret

000001d4 <MCP2515_read>:
	SPI_select();
	SPI_send(MCP_READ_STATUS);
	uint8_t recieved_status = SPI_receive();
	SPI_deselect();
	return recieved_status;
}
 1d4:	cf 93       	push	r28
 1d6:	c8 2f       	mov	r28, r24
 1d8:	36 d0       	rcall	.+108    	; 0x246 <SPI_select>
 1da:	83 e0       	ldi	r24, 0x03	; 3
 1dc:	28 d0       	rcall	.+80     	; 0x22e <SPI_send>
 1de:	8c 2f       	mov	r24, r28
 1e0:	26 d0       	rcall	.+76     	; 0x22e <SPI_send>
 1e2:	2a d0       	rcall	.+84     	; 0x238 <SPI_receive>
 1e4:	c8 2f       	mov	r28, r24
 1e6:	31 d0       	rcall	.+98     	; 0x24a <SPI_deselect>
 1e8:	8c 2f       	mov	r24, r28
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	cf 91       	pop	r28
 1ee:	08 95       	ret

000001f0 <MCP2515_bit_modify>:

void MCP2515_bit_modify(uint8_t adr, uint8_t mask, int data){
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	18 2f       	mov	r17, r24
 1f8:	d6 2f       	mov	r29, r22
 1fa:	c4 2f       	mov	r28, r20
	SPI_select();
 1fc:	24 d0       	rcall	.+72     	; 0x246 <SPI_select>
	SPI_send(MCP_BITMOD);
 1fe:	85 e0       	ldi	r24, 0x05	; 5
 200:	16 d0       	rcall	.+44     	; 0x22e <SPI_send>
	SPI_send(adr);
 202:	81 2f       	mov	r24, r17
 204:	14 d0       	rcall	.+40     	; 0x22e <SPI_send>
	SPI_send(mask);
 206:	8d 2f       	mov	r24, r29
 208:	12 d0       	rcall	.+36     	; 0x22e <SPI_send>
	SPI_send(data);
 20a:	8c 2f       	mov	r24, r28
 20c:	10 d0       	rcall	.+32     	; 0x22e <SPI_send>
	SPI_deselect();
 20e:	1d d0       	rcall	.+58     	; 0x24a <SPI_deselect>
}
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	1f 91       	pop	r17
 216:	08 95       	ret

00000218 <MCP2515_reset>:


void MCP2515_reset(void){
	printf("Resetting MCP2515\n");
 218:	85 ea       	ldi	r24, 0xA5	; 165
 21a:	92 e0       	ldi	r25, 0x02	; 2
 21c:	20 d1       	rcall	.+576    	; 0x45e <puts>
	SPI_select();
 21e:	13 d0       	rcall	.+38     	; 0x246 <SPI_select>
	SPI_send(MCP_RESET);
 220:	80 ec       	ldi	r24, 0xC0	; 192
 222:	05 d0       	rcall	.+10     	; 0x22e <SPI_send>
	SPI_deselect();
 224:	12 c0       	rjmp	.+36     	; 0x24a <SPI_deselect>
 226:	08 95       	ret

00000228 <MCP2515_initialize>:

#include "MCP2515_driver.h"
#include "SPI.h"

void MCP2515_initialize(void){
	SPI_initialize();
 228:	12 d0       	rcall	.+36     	; 0x24e <SPI_initialize>
	MCP2515_reset();
 22a:	f6 cf       	rjmp	.-20     	; 0x218 <MCP2515_reset>
 22c:	08 95       	ret

0000022e <SPI_send>:


void SPI_send(uint8_t data) {
	
	// Start the transmission
	SPDR = data;
 22e:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission complete (checks if the register is empty)
	while(!(SPSR & (1<<SPIF)));
 230:	0d b4       	in	r0, 0x2d	; 45
 232:	07 fe       	sbrs	r0, 7
 234:	fd cf       	rjmp	.-6      	; 0x230 <SPI_send+0x2>

}
 236:	08 95       	ret

00000238 <SPI_receive>:


uint8_t SPI_receive(void){
	
	// Send dummy data to receive from slave
	SPI_send(0);
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	f9 df       	rcall	.-14     	; 0x22e <SPI_send>
	
	// Wait for reception complete
	while(!(SPSR & (1<<SPIF)));
 23c:	0d b4       	in	r0, 0x2d	; 45
 23e:	07 fe       	sbrs	r0, 7
 240:	fd cf       	rjmp	.-6      	; 0x23c <SPI_receive+0x4>

	// Return Data Register
	return SPDR;
 242:	8e b5       	in	r24, 0x2e	; 46
}
 244:	08 95       	ret

00000246 <SPI_select>:

void SPI_select(void){
	PORTB &= ~(1 << SPI_SS);
 246:	2f 98       	cbi	0x05, 7	; 5
 248:	08 95       	ret

0000024a <SPI_deselect>:
}

void SPI_deselect(void){
	PORTB |= (1 << SPI_SS);
 24a:	2f 9a       	sbi	0x05, 7	; 5
 24c:	08 95       	ret

0000024e <SPI_initialize>:
void SPI_initialize(void){
	//IF DO SOMETHING! 
	#if NODE == 1
		DDRB &= ~(1 << SPI_MISO);
	#elif NODE == 2
		DDRB |= (1<<PB0);
 24e:	20 9a       	sbi	0x04, 0	; 4
		SPCR |= (1<<SPR0);
 250:	8c b5       	in	r24, 0x2c	; 44
 252:	81 60       	ori	r24, 0x01	; 1
 254:	8c bd       	out	0x2c, r24	; 44
	#endif
	
	/* Set MOSI and SCK output, all others input */
	DDRB |= (1<<SPI_MOSI)|(1<<SPI_SCK)|(1<<SPI_SS); //PB0 is not connected, but has to be set to output in order for SPI-comm to work
 256:	84 b1       	in	r24, 0x04	; 4
 258:	86 68       	ori	r24, 0x86	; 134
 25a:	84 b9       	out	0x04, r24	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR |= (1<<SPE)|(1<<MSTR);
 25c:	8c b5       	in	r24, 0x2c	; 44
 25e:	80 65       	ori	r24, 0x50	; 80
 260:	8c bd       	out	0x2c, r24	; 44
		
	SPI_deselect();
 262:	f3 df       	rcall	.-26     	; 0x24a <SPI_deselect>
	printf("SPI communication initialized.\n");
 264:	87 eb       	ldi	r24, 0xB7	; 183
 266:	92 e0       	ldi	r25, 0x02	; 2
 268:	fa c0       	rjmp	.+500    	; 0x45e <puts>
 26a:	08 95       	ret

0000026c <send_UART>:
 26c:	e0 ec       	ldi	r30, 0xC0	; 192
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	90 81       	ld	r25, Z
 272:	95 ff       	sbrs	r25, 5
 274:	fd cf       	rjmp	.-6      	; 0x270 <send_UART+0x4>
 276:	80 93 c6 00 	sts	0x00C6, r24
 27a:	08 95       	ret

0000027c <recieve_UART>:
 27c:	e0 ec       	ldi	r30, 0xC0	; 192
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	80 81       	ld	r24, Z
 282:	88 23       	and	r24, r24
 284:	ec f7       	brge	.-6      	; 0x280 <recieve_UART+0x4>
 286:	80 91 c6 00 	lds	r24, 0x00C6
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	08 95       	ret

0000028e <init_UART>:
 28e:	10 92 c5 00 	sts	0x00C5, r1
 292:	87 e6       	ldi	r24, 0x67	; 103
 294:	80 93 c4 00 	sts	0x00C4, r24
 298:	88 e1       	ldi	r24, 0x18	; 24
 29a:	80 93 c1 00 	sts	0x00C1, r24
 29e:	8e e0       	ldi	r24, 0x0E	; 14
 2a0:	80 93 c2 00 	sts	0x00C2, r24
 2a4:	6e e3       	ldi	r22, 0x3E	; 62
 2a6:	71 e0       	ldi	r23, 0x01	; 1
 2a8:	86 e3       	ldi	r24, 0x36	; 54
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	7d c0       	rjmp	.+250    	; 0x3a8 <fdevopen>
 2ae:	08 95       	ret

000002b0 <init_all>:
    }
    
}

void init_all(void){
	cli();
 2b0:	f8 94       	cli
	init_UART();
 2b2:	ed df       	rcall	.-38     	; 0x28e <init_UART>
	CAN_initialize();
 2b4:	64 df       	rcall	.-312    	; 0x17e <CAN_initialize>
	printf("Program initialized\n");
 2b6:	86 ed       	ldi	r24, 0xD6	; 214
 2b8:	92 e0       	ldi	r25, 0x02	; 2
 2ba:	d1 d0       	rcall	.+418    	; 0x45e <puts>
	sei();
 2bc:	78 94       	sei
 2be:	08 95       	ret

000002c0 <main>:
#include "pwm.h"
int main(void)
{
	
	
	init_all();
 2c0:	f7 df       	rcall	.-18     	; 0x2b0 <init_all>
	
	pwm_init(20);
 2c2:	84 e1       	ldi	r24, 0x14	; 20
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	04 d0       	rcall	.+8      	; 0x2d0 <pwm_init>
	
	pwm_set_pulse_width(1);
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	2a d0       	rcall	.+84     	; 0x322 <pwm_set_pulse_width>
 2ce:	ff cf       	rjmp	.-2      	; 0x2ce <main+0xe>

000002d0 <pwm_init>:

#include "pwm.h"
#include "../../common_library/i_o.h"
uint8_t FLAG_refresh_screen;

void pwm_init(int period){	//	Function for initilization of the timers
 2d0:	9c 01       	movw	r18, r24
	//Enable output at port E3
	DDRE |= (1 << PE3);
 2d2:	6b 9a       	sbi	0x0d, 3	; 13
	
	// Use Fast-pwm/mode 14. Compare Table 17.2 on page 145 of the Arduino2560 datasheet. Using  OC3A.
	TCCR3A &= ~(1<<WGM30);
 2d4:	e0 e9       	ldi	r30, 0x90	; 144
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	8e 7f       	andi	r24, 0xFE	; 254
 2dc:	80 83       	st	Z, r24
	TCCR3A |= (1<<WGM31);
 2de:	80 81       	ld	r24, Z
 2e0:	82 60       	ori	r24, 0x02	; 2
 2e2:	80 83       	st	Z, r24
	TCCR3B |= (1<<WGM33)|(1<<WGM32); //		WGM01: set mode to CTC (reset timer on OCR0)     CS0n:set prescaler (to 1024)	
 2e4:	a1 e9       	ldi	r26, 0x91	; 145
 2e6:	b0 e0       	ldi	r27, 0x00	; 0
 2e8:	8c 91       	ld	r24, X
 2ea:	88 61       	ori	r24, 0x18	; 24
 2ec:	8c 93       	st	X, r24
		
	//Set COM3A_1:0 to 10 to use non-inverted pwm.
	TCCR3A |= (1<<COM3A1);
 2ee:	80 81       	ld	r24, Z
 2f0:	80 68       	ori	r24, 0x80	; 128
 2f2:	80 83       	st	Z, r24
	TCCR3A &= ~(1<<COM3A0);
 2f4:	80 81       	ld	r24, Z
 2f6:	8f 7b       	andi	r24, 0xBF	; 191
 2f8:	80 83       	st	Z, r24

	// Set prescaler. Compare Table17-6. Clock Select Bit Description.
	TCCR3B |= (1<<CS32) | (1<<CS30);
 2fa:	8c 91       	ld	r24, X
 2fc:	85 60       	ori	r24, 0x05	; 5
 2fe:	8c 93       	st	X, r24
	TCCR3B &= ~(1<<CS31);
 300:	8c 91       	ld	r24, X
 302:	8d 7f       	andi	r24, 0xFD	; 253
 304:	8c 93       	st	X, r24
	// Define TOP. Compare Table 17.2.
	
	int TOP = 1000;
	int N = 1024;
	
	ICR3 = F_CPU / N / (1 + TOP) / period;
 306:	44 27       	eor	r20, r20
 308:	37 fd       	sbrc	r19, 7
 30a:	40 95       	com	r20
 30c:	54 2f       	mov	r21, r20
 30e:	6f e0       	ldi	r22, 0x0F	; 15
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	80 e0       	ldi	r24, 0x00	; 0
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0a d0       	rcall	.+20     	; 0x32c <__divmodsi4>
 318:	30 93 97 00 	sts	0x0097, r19
 31c:	20 93 96 00 	sts	0x0096, r18
 320:	08 95       	ret

00000322 <pwm_set_pulse_width>:
	
	//ICR3 = F_CPU/128/2;
}

void pwm_set_pulse_width(int val){
	OCR3A = val;
 322:	90 93 99 00 	sts	0x0099, r25
 326:	80 93 98 00 	sts	0x0098, r24
 32a:	08 95       	ret

0000032c <__divmodsi4>:
 32c:	05 2e       	mov	r0, r21
 32e:	97 fb       	bst	r25, 7
 330:	16 f4       	brtc	.+4      	; 0x336 <__divmodsi4+0xa>
 332:	00 94       	com	r0
 334:	0f d0       	rcall	.+30     	; 0x354 <__negsi2>
 336:	57 fd       	sbrc	r21, 7
 338:	05 d0       	rcall	.+10     	; 0x344 <__divmodsi4_neg2>
 33a:	14 d0       	rcall	.+40     	; 0x364 <__udivmodsi4>
 33c:	07 fc       	sbrc	r0, 7
 33e:	02 d0       	rcall	.+4      	; 0x344 <__divmodsi4_neg2>
 340:	46 f4       	brtc	.+16     	; 0x352 <__divmodsi4_exit>
 342:	08 c0       	rjmp	.+16     	; 0x354 <__negsi2>

00000344 <__divmodsi4_neg2>:
 344:	50 95       	com	r21
 346:	40 95       	com	r20
 348:	30 95       	com	r19
 34a:	21 95       	neg	r18
 34c:	3f 4f       	sbci	r19, 0xFF	; 255
 34e:	4f 4f       	sbci	r20, 0xFF	; 255
 350:	5f 4f       	sbci	r21, 0xFF	; 255

00000352 <__divmodsi4_exit>:
 352:	08 95       	ret

00000354 <__negsi2>:
 354:	90 95       	com	r25
 356:	80 95       	com	r24
 358:	70 95       	com	r23
 35a:	61 95       	neg	r22
 35c:	7f 4f       	sbci	r23, 0xFF	; 255
 35e:	8f 4f       	sbci	r24, 0xFF	; 255
 360:	9f 4f       	sbci	r25, 0xFF	; 255
 362:	08 95       	ret

00000364 <__udivmodsi4>:
 364:	a1 e2       	ldi	r26, 0x21	; 33
 366:	1a 2e       	mov	r1, r26
 368:	aa 1b       	sub	r26, r26
 36a:	bb 1b       	sub	r27, r27
 36c:	fd 01       	movw	r30, r26
 36e:	0d c0       	rjmp	.+26     	; 0x38a <__udivmodsi4_ep>

00000370 <__udivmodsi4_loop>:
 370:	aa 1f       	adc	r26, r26
 372:	bb 1f       	adc	r27, r27
 374:	ee 1f       	adc	r30, r30
 376:	ff 1f       	adc	r31, r31
 378:	a2 17       	cp	r26, r18
 37a:	b3 07       	cpc	r27, r19
 37c:	e4 07       	cpc	r30, r20
 37e:	f5 07       	cpc	r31, r21
 380:	20 f0       	brcs	.+8      	; 0x38a <__udivmodsi4_ep>
 382:	a2 1b       	sub	r26, r18
 384:	b3 0b       	sbc	r27, r19
 386:	e4 0b       	sbc	r30, r20
 388:	f5 0b       	sbc	r31, r21

0000038a <__udivmodsi4_ep>:
 38a:	66 1f       	adc	r22, r22
 38c:	77 1f       	adc	r23, r23
 38e:	88 1f       	adc	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	1a 94       	dec	r1
 394:	69 f7       	brne	.-38     	; 0x370 <__udivmodsi4_loop>
 396:	60 95       	com	r22
 398:	70 95       	com	r23
 39a:	80 95       	com	r24
 39c:	90 95       	com	r25
 39e:	9b 01       	movw	r18, r22
 3a0:	ac 01       	movw	r20, r24
 3a2:	bd 01       	movw	r22, r26
 3a4:	cf 01       	movw	r24, r30
 3a6:	08 95       	ret

000003a8 <fdevopen>:
 3a8:	0f 93       	push	r16
 3aa:	1f 93       	push	r17
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	ec 01       	movw	r28, r24
 3b2:	8b 01       	movw	r16, r22
 3b4:	00 97       	sbiw	r24, 0x00	; 0
 3b6:	31 f4       	brne	.+12     	; 0x3c4 <fdevopen+0x1c>
 3b8:	61 15       	cp	r22, r1
 3ba:	71 05       	cpc	r23, r1
 3bc:	19 f4       	brne	.+6      	; 0x3c4 <fdevopen+0x1c>
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	37 c0       	rjmp	.+110    	; 0x432 <fdevopen+0x8a>
 3c4:	6e e0       	ldi	r22, 0x0E	; 14
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	63 d2       	rcall	.+1222   	; 0x894 <calloc>
 3ce:	fc 01       	movw	r30, r24
 3d0:	00 97       	sbiw	r24, 0x00	; 0
 3d2:	a9 f3       	breq	.-22     	; 0x3be <fdevopen+0x16>
 3d4:	80 e8       	ldi	r24, 0x80	; 128
 3d6:	83 83       	std	Z+3, r24	; 0x03
 3d8:	01 15       	cp	r16, r1
 3da:	11 05       	cpc	r17, r1
 3dc:	71 f0       	breq	.+28     	; 0x3fa <fdevopen+0x52>
 3de:	13 87       	std	Z+11, r17	; 0x0b
 3e0:	02 87       	std	Z+10, r16	; 0x0a
 3e2:	81 e8       	ldi	r24, 0x81	; 129
 3e4:	83 83       	std	Z+3, r24	; 0x03
 3e6:	80 91 f6 02 	lds	r24, 0x02F6
 3ea:	90 91 f7 02 	lds	r25, 0x02F7
 3ee:	89 2b       	or	r24, r25
 3f0:	21 f4       	brne	.+8      	; 0x3fa <fdevopen+0x52>
 3f2:	f0 93 f7 02 	sts	0x02F7, r31
 3f6:	e0 93 f6 02 	sts	0x02F6, r30
 3fa:	20 97       	sbiw	r28, 0x00	; 0
 3fc:	c9 f0       	breq	.+50     	; 0x430 <fdevopen+0x88>
 3fe:	d1 87       	std	Z+9, r29	; 0x09
 400:	c0 87       	std	Z+8, r28	; 0x08
 402:	83 81       	ldd	r24, Z+3	; 0x03
 404:	82 60       	ori	r24, 0x02	; 2
 406:	83 83       	std	Z+3, r24	; 0x03
 408:	80 91 f8 02 	lds	r24, 0x02F8
 40c:	90 91 f9 02 	lds	r25, 0x02F9
 410:	89 2b       	or	r24, r25
 412:	71 f4       	brne	.+28     	; 0x430 <fdevopen+0x88>
 414:	f0 93 f9 02 	sts	0x02F9, r31
 418:	e0 93 f8 02 	sts	0x02F8, r30
 41c:	80 91 fa 02 	lds	r24, 0x02FA
 420:	90 91 fb 02 	lds	r25, 0x02FB
 424:	89 2b       	or	r24, r25
 426:	21 f4       	brne	.+8      	; 0x430 <fdevopen+0x88>
 428:	f0 93 fb 02 	sts	0x02FB, r31
 42c:	e0 93 fa 02 	sts	0x02FA, r30
 430:	cf 01       	movw	r24, r30
 432:	df 91       	pop	r29
 434:	cf 91       	pop	r28
 436:	1f 91       	pop	r17
 438:	0f 91       	pop	r16
 43a:	08 95       	ret

0000043c <printf>:
 43c:	cf 93       	push	r28
 43e:	df 93       	push	r29
 440:	cd b7       	in	r28, 0x3d	; 61
 442:	de b7       	in	r29, 0x3e	; 62
 444:	fe 01       	movw	r30, r28
 446:	36 96       	adiw	r30, 0x06	; 6
 448:	61 91       	ld	r22, Z+
 44a:	71 91       	ld	r23, Z+
 44c:	af 01       	movw	r20, r30
 44e:	80 91 f8 02 	lds	r24, 0x02F8
 452:	90 91 f9 02 	lds	r25, 0x02F9
 456:	30 d0       	rcall	.+96     	; 0x4b8 <vfprintf>
 458:	df 91       	pop	r29
 45a:	cf 91       	pop	r28
 45c:	08 95       	ret

0000045e <puts>:
 45e:	0f 93       	push	r16
 460:	1f 93       	push	r17
 462:	cf 93       	push	r28
 464:	df 93       	push	r29
 466:	e0 91 f8 02 	lds	r30, 0x02F8
 46a:	f0 91 f9 02 	lds	r31, 0x02F9
 46e:	23 81       	ldd	r18, Z+3	; 0x03
 470:	21 ff       	sbrs	r18, 1
 472:	1b c0       	rjmp	.+54     	; 0x4aa <puts+0x4c>
 474:	ec 01       	movw	r28, r24
 476:	00 e0       	ldi	r16, 0x00	; 0
 478:	10 e0       	ldi	r17, 0x00	; 0
 47a:	89 91       	ld	r24, Y+
 47c:	60 91 f8 02 	lds	r22, 0x02F8
 480:	70 91 f9 02 	lds	r23, 0x02F9
 484:	db 01       	movw	r26, r22
 486:	18 96       	adiw	r26, 0x08	; 8
 488:	ed 91       	ld	r30, X+
 48a:	fc 91       	ld	r31, X
 48c:	19 97       	sbiw	r26, 0x09	; 9
 48e:	88 23       	and	r24, r24
 490:	31 f0       	breq	.+12     	; 0x49e <puts+0x40>
 492:	19 95       	eicall
 494:	89 2b       	or	r24, r25
 496:	89 f3       	breq	.-30     	; 0x47a <puts+0x1c>
 498:	0f ef       	ldi	r16, 0xFF	; 255
 49a:	1f ef       	ldi	r17, 0xFF	; 255
 49c:	ee cf       	rjmp	.-36     	; 0x47a <puts+0x1c>
 49e:	8a e0       	ldi	r24, 0x0A	; 10
 4a0:	19 95       	eicall
 4a2:	89 2b       	or	r24, r25
 4a4:	11 f4       	brne	.+4      	; 0x4aa <puts+0x4c>
 4a6:	c8 01       	movw	r24, r16
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <puts+0x50>
 4aa:	8f ef       	ldi	r24, 0xFF	; 255
 4ac:	9f ef       	ldi	r25, 0xFF	; 255
 4ae:	df 91       	pop	r29
 4b0:	cf 91       	pop	r28
 4b2:	1f 91       	pop	r17
 4b4:	0f 91       	pop	r16
 4b6:	08 95       	ret

000004b8 <vfprintf>:
 4b8:	2f 92       	push	r2
 4ba:	3f 92       	push	r3
 4bc:	4f 92       	push	r4
 4be:	5f 92       	push	r5
 4c0:	6f 92       	push	r6
 4c2:	7f 92       	push	r7
 4c4:	8f 92       	push	r8
 4c6:	9f 92       	push	r9
 4c8:	af 92       	push	r10
 4ca:	bf 92       	push	r11
 4cc:	cf 92       	push	r12
 4ce:	df 92       	push	r13
 4d0:	ef 92       	push	r14
 4d2:	ff 92       	push	r15
 4d4:	0f 93       	push	r16
 4d6:	1f 93       	push	r17
 4d8:	cf 93       	push	r28
 4da:	df 93       	push	r29
 4dc:	cd b7       	in	r28, 0x3d	; 61
 4de:	de b7       	in	r29, 0x3e	; 62
 4e0:	2c 97       	sbiw	r28, 0x0c	; 12
 4e2:	0f b6       	in	r0, 0x3f	; 63
 4e4:	f8 94       	cli
 4e6:	de bf       	out	0x3e, r29	; 62
 4e8:	0f be       	out	0x3f, r0	; 63
 4ea:	cd bf       	out	0x3d, r28	; 61
 4ec:	7c 01       	movw	r14, r24
 4ee:	6b 01       	movw	r12, r22
 4f0:	8a 01       	movw	r16, r20
 4f2:	fc 01       	movw	r30, r24
 4f4:	17 82       	std	Z+7, r1	; 0x07
 4f6:	16 82       	std	Z+6, r1	; 0x06
 4f8:	83 81       	ldd	r24, Z+3	; 0x03
 4fa:	81 ff       	sbrs	r24, 1
 4fc:	b0 c1       	rjmp	.+864    	; 0x85e <vfprintf+0x3a6>
 4fe:	ce 01       	movw	r24, r28
 500:	01 96       	adiw	r24, 0x01	; 1
 502:	4c 01       	movw	r8, r24
 504:	f7 01       	movw	r30, r14
 506:	93 81       	ldd	r25, Z+3	; 0x03
 508:	f6 01       	movw	r30, r12
 50a:	93 fd       	sbrc	r25, 3
 50c:	85 91       	lpm	r24, Z+
 50e:	93 ff       	sbrs	r25, 3
 510:	81 91       	ld	r24, Z+
 512:	6f 01       	movw	r12, r30
 514:	88 23       	and	r24, r24
 516:	09 f4       	brne	.+2      	; 0x51a <vfprintf+0x62>
 518:	9e c1       	rjmp	.+828    	; 0x856 <vfprintf+0x39e>
 51a:	85 32       	cpi	r24, 0x25	; 37
 51c:	39 f4       	brne	.+14     	; 0x52c <vfprintf+0x74>
 51e:	93 fd       	sbrc	r25, 3
 520:	85 91       	lpm	r24, Z+
 522:	93 ff       	sbrs	r25, 3
 524:	81 91       	ld	r24, Z+
 526:	6f 01       	movw	r12, r30
 528:	85 32       	cpi	r24, 0x25	; 37
 52a:	21 f4       	brne	.+8      	; 0x534 <vfprintf+0x7c>
 52c:	b7 01       	movw	r22, r14
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0f d3       	rcall	.+1566   	; 0xb50 <fputc>
 532:	e8 cf       	rjmp	.-48     	; 0x504 <vfprintf+0x4c>
 534:	51 2c       	mov	r5, r1
 536:	31 2c       	mov	r3, r1
 538:	20 e0       	ldi	r18, 0x00	; 0
 53a:	20 32       	cpi	r18, 0x20	; 32
 53c:	a0 f4       	brcc	.+40     	; 0x566 <vfprintf+0xae>
 53e:	8b 32       	cpi	r24, 0x2B	; 43
 540:	69 f0       	breq	.+26     	; 0x55c <vfprintf+0xa4>
 542:	30 f4       	brcc	.+12     	; 0x550 <vfprintf+0x98>
 544:	80 32       	cpi	r24, 0x20	; 32
 546:	59 f0       	breq	.+22     	; 0x55e <vfprintf+0xa6>
 548:	83 32       	cpi	r24, 0x23	; 35
 54a:	69 f4       	brne	.+26     	; 0x566 <vfprintf+0xae>
 54c:	20 61       	ori	r18, 0x10	; 16
 54e:	2c c0       	rjmp	.+88     	; 0x5a8 <vfprintf+0xf0>
 550:	8d 32       	cpi	r24, 0x2D	; 45
 552:	39 f0       	breq	.+14     	; 0x562 <vfprintf+0xaa>
 554:	80 33       	cpi	r24, 0x30	; 48
 556:	39 f4       	brne	.+14     	; 0x566 <vfprintf+0xae>
 558:	21 60       	ori	r18, 0x01	; 1
 55a:	26 c0       	rjmp	.+76     	; 0x5a8 <vfprintf+0xf0>
 55c:	22 60       	ori	r18, 0x02	; 2
 55e:	24 60       	ori	r18, 0x04	; 4
 560:	23 c0       	rjmp	.+70     	; 0x5a8 <vfprintf+0xf0>
 562:	28 60       	ori	r18, 0x08	; 8
 564:	21 c0       	rjmp	.+66     	; 0x5a8 <vfprintf+0xf0>
 566:	27 fd       	sbrc	r18, 7
 568:	27 c0       	rjmp	.+78     	; 0x5b8 <vfprintf+0x100>
 56a:	30 ed       	ldi	r19, 0xD0	; 208
 56c:	38 0f       	add	r19, r24
 56e:	3a 30       	cpi	r19, 0x0A	; 10
 570:	78 f4       	brcc	.+30     	; 0x590 <vfprintf+0xd8>
 572:	26 ff       	sbrs	r18, 6
 574:	06 c0       	rjmp	.+12     	; 0x582 <vfprintf+0xca>
 576:	fa e0       	ldi	r31, 0x0A	; 10
 578:	5f 9e       	mul	r5, r31
 57a:	30 0d       	add	r19, r0
 57c:	11 24       	eor	r1, r1
 57e:	53 2e       	mov	r5, r19
 580:	13 c0       	rjmp	.+38     	; 0x5a8 <vfprintf+0xf0>
 582:	8a e0       	ldi	r24, 0x0A	; 10
 584:	38 9e       	mul	r3, r24
 586:	30 0d       	add	r19, r0
 588:	11 24       	eor	r1, r1
 58a:	33 2e       	mov	r3, r19
 58c:	20 62       	ori	r18, 0x20	; 32
 58e:	0c c0       	rjmp	.+24     	; 0x5a8 <vfprintf+0xf0>
 590:	8e 32       	cpi	r24, 0x2E	; 46
 592:	21 f4       	brne	.+8      	; 0x59c <vfprintf+0xe4>
 594:	26 fd       	sbrc	r18, 6
 596:	5f c1       	rjmp	.+702    	; 0x856 <vfprintf+0x39e>
 598:	20 64       	ori	r18, 0x40	; 64
 59a:	06 c0       	rjmp	.+12     	; 0x5a8 <vfprintf+0xf0>
 59c:	8c 36       	cpi	r24, 0x6C	; 108
 59e:	11 f4       	brne	.+4      	; 0x5a4 <vfprintf+0xec>
 5a0:	20 68       	ori	r18, 0x80	; 128
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <vfprintf+0xf0>
 5a4:	88 36       	cpi	r24, 0x68	; 104
 5a6:	41 f4       	brne	.+16     	; 0x5b8 <vfprintf+0x100>
 5a8:	f6 01       	movw	r30, r12
 5aa:	93 fd       	sbrc	r25, 3
 5ac:	85 91       	lpm	r24, Z+
 5ae:	93 ff       	sbrs	r25, 3
 5b0:	81 91       	ld	r24, Z+
 5b2:	6f 01       	movw	r12, r30
 5b4:	81 11       	cpse	r24, r1
 5b6:	c1 cf       	rjmp	.-126    	; 0x53a <vfprintf+0x82>
 5b8:	98 2f       	mov	r25, r24
 5ba:	9f 7d       	andi	r25, 0xDF	; 223
 5bc:	95 54       	subi	r25, 0x45	; 69
 5be:	93 30       	cpi	r25, 0x03	; 3
 5c0:	28 f4       	brcc	.+10     	; 0x5cc <vfprintf+0x114>
 5c2:	0c 5f       	subi	r16, 0xFC	; 252
 5c4:	1f 4f       	sbci	r17, 0xFF	; 255
 5c6:	ff e3       	ldi	r31, 0x3F	; 63
 5c8:	f9 83       	std	Y+1, r31	; 0x01
 5ca:	0d c0       	rjmp	.+26     	; 0x5e6 <vfprintf+0x12e>
 5cc:	83 36       	cpi	r24, 0x63	; 99
 5ce:	31 f0       	breq	.+12     	; 0x5dc <vfprintf+0x124>
 5d0:	83 37       	cpi	r24, 0x73	; 115
 5d2:	71 f0       	breq	.+28     	; 0x5f0 <vfprintf+0x138>
 5d4:	83 35       	cpi	r24, 0x53	; 83
 5d6:	09 f0       	breq	.+2      	; 0x5da <vfprintf+0x122>
 5d8:	57 c0       	rjmp	.+174    	; 0x688 <vfprintf+0x1d0>
 5da:	21 c0       	rjmp	.+66     	; 0x61e <vfprintf+0x166>
 5dc:	f8 01       	movw	r30, r16
 5de:	80 81       	ld	r24, Z
 5e0:	89 83       	std	Y+1, r24	; 0x01
 5e2:	0e 5f       	subi	r16, 0xFE	; 254
 5e4:	1f 4f       	sbci	r17, 0xFF	; 255
 5e6:	44 24       	eor	r4, r4
 5e8:	43 94       	inc	r4
 5ea:	51 2c       	mov	r5, r1
 5ec:	54 01       	movw	r10, r8
 5ee:	14 c0       	rjmp	.+40     	; 0x618 <vfprintf+0x160>
 5f0:	38 01       	movw	r6, r16
 5f2:	f2 e0       	ldi	r31, 0x02	; 2
 5f4:	6f 0e       	add	r6, r31
 5f6:	71 1c       	adc	r7, r1
 5f8:	f8 01       	movw	r30, r16
 5fa:	a0 80       	ld	r10, Z
 5fc:	b1 80       	ldd	r11, Z+1	; 0x01
 5fe:	26 ff       	sbrs	r18, 6
 600:	03 c0       	rjmp	.+6      	; 0x608 <vfprintf+0x150>
 602:	65 2d       	mov	r22, r5
 604:	70 e0       	ldi	r23, 0x00	; 0
 606:	02 c0       	rjmp	.+4      	; 0x60c <vfprintf+0x154>
 608:	6f ef       	ldi	r22, 0xFF	; 255
 60a:	7f ef       	ldi	r23, 0xFF	; 255
 60c:	c5 01       	movw	r24, r10
 60e:	2c 87       	std	Y+12, r18	; 0x0c
 610:	94 d2       	rcall	.+1320   	; 0xb3a <strnlen>
 612:	2c 01       	movw	r4, r24
 614:	83 01       	movw	r16, r6
 616:	2c 85       	ldd	r18, Y+12	; 0x0c
 618:	2f 77       	andi	r18, 0x7F	; 127
 61a:	22 2e       	mov	r2, r18
 61c:	16 c0       	rjmp	.+44     	; 0x64a <vfprintf+0x192>
 61e:	38 01       	movw	r6, r16
 620:	f2 e0       	ldi	r31, 0x02	; 2
 622:	6f 0e       	add	r6, r31
 624:	71 1c       	adc	r7, r1
 626:	f8 01       	movw	r30, r16
 628:	a0 80       	ld	r10, Z
 62a:	b1 80       	ldd	r11, Z+1	; 0x01
 62c:	26 ff       	sbrs	r18, 6
 62e:	03 c0       	rjmp	.+6      	; 0x636 <vfprintf+0x17e>
 630:	65 2d       	mov	r22, r5
 632:	70 e0       	ldi	r23, 0x00	; 0
 634:	02 c0       	rjmp	.+4      	; 0x63a <vfprintf+0x182>
 636:	6f ef       	ldi	r22, 0xFF	; 255
 638:	7f ef       	ldi	r23, 0xFF	; 255
 63a:	c5 01       	movw	r24, r10
 63c:	2c 87       	std	Y+12, r18	; 0x0c
 63e:	6b d2       	rcall	.+1238   	; 0xb16 <strnlen_P>
 640:	2c 01       	movw	r4, r24
 642:	2c 85       	ldd	r18, Y+12	; 0x0c
 644:	20 68       	ori	r18, 0x80	; 128
 646:	22 2e       	mov	r2, r18
 648:	83 01       	movw	r16, r6
 64a:	23 fc       	sbrc	r2, 3
 64c:	19 c0       	rjmp	.+50     	; 0x680 <vfprintf+0x1c8>
 64e:	83 2d       	mov	r24, r3
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	48 16       	cp	r4, r24
 654:	59 06       	cpc	r5, r25
 656:	a0 f4       	brcc	.+40     	; 0x680 <vfprintf+0x1c8>
 658:	b7 01       	movw	r22, r14
 65a:	80 e2       	ldi	r24, 0x20	; 32
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	78 d2       	rcall	.+1264   	; 0xb50 <fputc>
 660:	3a 94       	dec	r3
 662:	f5 cf       	rjmp	.-22     	; 0x64e <vfprintf+0x196>
 664:	f5 01       	movw	r30, r10
 666:	27 fc       	sbrc	r2, 7
 668:	85 91       	lpm	r24, Z+
 66a:	27 fe       	sbrs	r2, 7
 66c:	81 91       	ld	r24, Z+
 66e:	5f 01       	movw	r10, r30
 670:	b7 01       	movw	r22, r14
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	6d d2       	rcall	.+1242   	; 0xb50 <fputc>
 676:	31 10       	cpse	r3, r1
 678:	3a 94       	dec	r3
 67a:	f1 e0       	ldi	r31, 0x01	; 1
 67c:	4f 1a       	sub	r4, r31
 67e:	51 08       	sbc	r5, r1
 680:	41 14       	cp	r4, r1
 682:	51 04       	cpc	r5, r1
 684:	79 f7       	brne	.-34     	; 0x664 <vfprintf+0x1ac>
 686:	de c0       	rjmp	.+444    	; 0x844 <vfprintf+0x38c>
 688:	84 36       	cpi	r24, 0x64	; 100
 68a:	11 f0       	breq	.+4      	; 0x690 <vfprintf+0x1d8>
 68c:	89 36       	cpi	r24, 0x69	; 105
 68e:	31 f5       	brne	.+76     	; 0x6dc <vfprintf+0x224>
 690:	f8 01       	movw	r30, r16
 692:	27 ff       	sbrs	r18, 7
 694:	07 c0       	rjmp	.+14     	; 0x6a4 <vfprintf+0x1ec>
 696:	60 81       	ld	r22, Z
 698:	71 81       	ldd	r23, Z+1	; 0x01
 69a:	82 81       	ldd	r24, Z+2	; 0x02
 69c:	93 81       	ldd	r25, Z+3	; 0x03
 69e:	0c 5f       	subi	r16, 0xFC	; 252
 6a0:	1f 4f       	sbci	r17, 0xFF	; 255
 6a2:	08 c0       	rjmp	.+16     	; 0x6b4 <vfprintf+0x1fc>
 6a4:	60 81       	ld	r22, Z
 6a6:	71 81       	ldd	r23, Z+1	; 0x01
 6a8:	88 27       	eor	r24, r24
 6aa:	77 fd       	sbrc	r23, 7
 6ac:	80 95       	com	r24
 6ae:	98 2f       	mov	r25, r24
 6b0:	0e 5f       	subi	r16, 0xFE	; 254
 6b2:	1f 4f       	sbci	r17, 0xFF	; 255
 6b4:	2f 76       	andi	r18, 0x6F	; 111
 6b6:	b2 2e       	mov	r11, r18
 6b8:	97 ff       	sbrs	r25, 7
 6ba:	09 c0       	rjmp	.+18     	; 0x6ce <vfprintf+0x216>
 6bc:	90 95       	com	r25
 6be:	80 95       	com	r24
 6c0:	70 95       	com	r23
 6c2:	61 95       	neg	r22
 6c4:	7f 4f       	sbci	r23, 0xFF	; 255
 6c6:	8f 4f       	sbci	r24, 0xFF	; 255
 6c8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ca:	20 68       	ori	r18, 0x80	; 128
 6cc:	b2 2e       	mov	r11, r18
 6ce:	2a e0       	ldi	r18, 0x0A	; 10
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	a4 01       	movw	r20, r8
 6d4:	6f d2       	rcall	.+1246   	; 0xbb4 <__ultoa_invert>
 6d6:	a8 2e       	mov	r10, r24
 6d8:	a8 18       	sub	r10, r8
 6da:	43 c0       	rjmp	.+134    	; 0x762 <vfprintf+0x2aa>
 6dc:	85 37       	cpi	r24, 0x75	; 117
 6de:	29 f4       	brne	.+10     	; 0x6ea <vfprintf+0x232>
 6e0:	2f 7e       	andi	r18, 0xEF	; 239
 6e2:	b2 2e       	mov	r11, r18
 6e4:	2a e0       	ldi	r18, 0x0A	; 10
 6e6:	30 e0       	ldi	r19, 0x00	; 0
 6e8:	25 c0       	rjmp	.+74     	; 0x734 <vfprintf+0x27c>
 6ea:	f2 2f       	mov	r31, r18
 6ec:	f9 7f       	andi	r31, 0xF9	; 249
 6ee:	bf 2e       	mov	r11, r31
 6f0:	8f 36       	cpi	r24, 0x6F	; 111
 6f2:	c1 f0       	breq	.+48     	; 0x724 <vfprintf+0x26c>
 6f4:	18 f4       	brcc	.+6      	; 0x6fc <vfprintf+0x244>
 6f6:	88 35       	cpi	r24, 0x58	; 88
 6f8:	79 f0       	breq	.+30     	; 0x718 <vfprintf+0x260>
 6fa:	ad c0       	rjmp	.+346    	; 0x856 <vfprintf+0x39e>
 6fc:	80 37       	cpi	r24, 0x70	; 112
 6fe:	19 f0       	breq	.+6      	; 0x706 <vfprintf+0x24e>
 700:	88 37       	cpi	r24, 0x78	; 120
 702:	21 f0       	breq	.+8      	; 0x70c <vfprintf+0x254>
 704:	a8 c0       	rjmp	.+336    	; 0x856 <vfprintf+0x39e>
 706:	2f 2f       	mov	r18, r31
 708:	20 61       	ori	r18, 0x10	; 16
 70a:	b2 2e       	mov	r11, r18
 70c:	b4 fe       	sbrs	r11, 4
 70e:	0d c0       	rjmp	.+26     	; 0x72a <vfprintf+0x272>
 710:	8b 2d       	mov	r24, r11
 712:	84 60       	ori	r24, 0x04	; 4
 714:	b8 2e       	mov	r11, r24
 716:	09 c0       	rjmp	.+18     	; 0x72a <vfprintf+0x272>
 718:	24 ff       	sbrs	r18, 4
 71a:	0a c0       	rjmp	.+20     	; 0x730 <vfprintf+0x278>
 71c:	9f 2f       	mov	r25, r31
 71e:	96 60       	ori	r25, 0x06	; 6
 720:	b9 2e       	mov	r11, r25
 722:	06 c0       	rjmp	.+12     	; 0x730 <vfprintf+0x278>
 724:	28 e0       	ldi	r18, 0x08	; 8
 726:	30 e0       	ldi	r19, 0x00	; 0
 728:	05 c0       	rjmp	.+10     	; 0x734 <vfprintf+0x27c>
 72a:	20 e1       	ldi	r18, 0x10	; 16
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	02 c0       	rjmp	.+4      	; 0x734 <vfprintf+0x27c>
 730:	20 e1       	ldi	r18, 0x10	; 16
 732:	32 e0       	ldi	r19, 0x02	; 2
 734:	f8 01       	movw	r30, r16
 736:	b7 fe       	sbrs	r11, 7
 738:	07 c0       	rjmp	.+14     	; 0x748 <vfprintf+0x290>
 73a:	60 81       	ld	r22, Z
 73c:	71 81       	ldd	r23, Z+1	; 0x01
 73e:	82 81       	ldd	r24, Z+2	; 0x02
 740:	93 81       	ldd	r25, Z+3	; 0x03
 742:	0c 5f       	subi	r16, 0xFC	; 252
 744:	1f 4f       	sbci	r17, 0xFF	; 255
 746:	06 c0       	rjmp	.+12     	; 0x754 <vfprintf+0x29c>
 748:	60 81       	ld	r22, Z
 74a:	71 81       	ldd	r23, Z+1	; 0x01
 74c:	80 e0       	ldi	r24, 0x00	; 0
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	0e 5f       	subi	r16, 0xFE	; 254
 752:	1f 4f       	sbci	r17, 0xFF	; 255
 754:	a4 01       	movw	r20, r8
 756:	2e d2       	rcall	.+1116   	; 0xbb4 <__ultoa_invert>
 758:	a8 2e       	mov	r10, r24
 75a:	a8 18       	sub	r10, r8
 75c:	fb 2d       	mov	r31, r11
 75e:	ff 77       	andi	r31, 0x7F	; 127
 760:	bf 2e       	mov	r11, r31
 762:	b6 fe       	sbrs	r11, 6
 764:	0b c0       	rjmp	.+22     	; 0x77c <vfprintf+0x2c4>
 766:	2b 2d       	mov	r18, r11
 768:	2e 7f       	andi	r18, 0xFE	; 254
 76a:	a5 14       	cp	r10, r5
 76c:	50 f4       	brcc	.+20     	; 0x782 <vfprintf+0x2ca>
 76e:	b4 fe       	sbrs	r11, 4
 770:	0a c0       	rjmp	.+20     	; 0x786 <vfprintf+0x2ce>
 772:	b2 fc       	sbrc	r11, 2
 774:	08 c0       	rjmp	.+16     	; 0x786 <vfprintf+0x2ce>
 776:	2b 2d       	mov	r18, r11
 778:	2e 7e       	andi	r18, 0xEE	; 238
 77a:	05 c0       	rjmp	.+10     	; 0x786 <vfprintf+0x2ce>
 77c:	7a 2c       	mov	r7, r10
 77e:	2b 2d       	mov	r18, r11
 780:	03 c0       	rjmp	.+6      	; 0x788 <vfprintf+0x2d0>
 782:	7a 2c       	mov	r7, r10
 784:	01 c0       	rjmp	.+2      	; 0x788 <vfprintf+0x2d0>
 786:	75 2c       	mov	r7, r5
 788:	24 ff       	sbrs	r18, 4
 78a:	0d c0       	rjmp	.+26     	; 0x7a6 <vfprintf+0x2ee>
 78c:	fe 01       	movw	r30, r28
 78e:	ea 0d       	add	r30, r10
 790:	f1 1d       	adc	r31, r1
 792:	80 81       	ld	r24, Z
 794:	80 33       	cpi	r24, 0x30	; 48
 796:	11 f4       	brne	.+4      	; 0x79c <vfprintf+0x2e4>
 798:	29 7e       	andi	r18, 0xE9	; 233
 79a:	09 c0       	rjmp	.+18     	; 0x7ae <vfprintf+0x2f6>
 79c:	22 ff       	sbrs	r18, 2
 79e:	06 c0       	rjmp	.+12     	; 0x7ac <vfprintf+0x2f4>
 7a0:	73 94       	inc	r7
 7a2:	73 94       	inc	r7
 7a4:	04 c0       	rjmp	.+8      	; 0x7ae <vfprintf+0x2f6>
 7a6:	82 2f       	mov	r24, r18
 7a8:	86 78       	andi	r24, 0x86	; 134
 7aa:	09 f0       	breq	.+2      	; 0x7ae <vfprintf+0x2f6>
 7ac:	73 94       	inc	r7
 7ae:	23 fd       	sbrc	r18, 3
 7b0:	12 c0       	rjmp	.+36     	; 0x7d6 <vfprintf+0x31e>
 7b2:	20 ff       	sbrs	r18, 0
 7b4:	06 c0       	rjmp	.+12     	; 0x7c2 <vfprintf+0x30a>
 7b6:	5a 2c       	mov	r5, r10
 7b8:	73 14       	cp	r7, r3
 7ba:	18 f4       	brcc	.+6      	; 0x7c2 <vfprintf+0x30a>
 7bc:	53 0c       	add	r5, r3
 7be:	57 18       	sub	r5, r7
 7c0:	73 2c       	mov	r7, r3
 7c2:	73 14       	cp	r7, r3
 7c4:	60 f4       	brcc	.+24     	; 0x7de <vfprintf+0x326>
 7c6:	b7 01       	movw	r22, r14
 7c8:	80 e2       	ldi	r24, 0x20	; 32
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	2c 87       	std	Y+12, r18	; 0x0c
 7ce:	c0 d1       	rcall	.+896    	; 0xb50 <fputc>
 7d0:	73 94       	inc	r7
 7d2:	2c 85       	ldd	r18, Y+12	; 0x0c
 7d4:	f6 cf       	rjmp	.-20     	; 0x7c2 <vfprintf+0x30a>
 7d6:	73 14       	cp	r7, r3
 7d8:	10 f4       	brcc	.+4      	; 0x7de <vfprintf+0x326>
 7da:	37 18       	sub	r3, r7
 7dc:	01 c0       	rjmp	.+2      	; 0x7e0 <vfprintf+0x328>
 7de:	31 2c       	mov	r3, r1
 7e0:	24 ff       	sbrs	r18, 4
 7e2:	11 c0       	rjmp	.+34     	; 0x806 <vfprintf+0x34e>
 7e4:	b7 01       	movw	r22, r14
 7e6:	80 e3       	ldi	r24, 0x30	; 48
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	2c 87       	std	Y+12, r18	; 0x0c
 7ec:	b1 d1       	rcall	.+866    	; 0xb50 <fputc>
 7ee:	2c 85       	ldd	r18, Y+12	; 0x0c
 7f0:	22 ff       	sbrs	r18, 2
 7f2:	16 c0       	rjmp	.+44     	; 0x820 <vfprintf+0x368>
 7f4:	21 ff       	sbrs	r18, 1
 7f6:	03 c0       	rjmp	.+6      	; 0x7fe <vfprintf+0x346>
 7f8:	88 e5       	ldi	r24, 0x58	; 88
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <vfprintf+0x34a>
 7fe:	88 e7       	ldi	r24, 0x78	; 120
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	b7 01       	movw	r22, r14
 804:	0c c0       	rjmp	.+24     	; 0x81e <vfprintf+0x366>
 806:	82 2f       	mov	r24, r18
 808:	86 78       	andi	r24, 0x86	; 134
 80a:	51 f0       	breq	.+20     	; 0x820 <vfprintf+0x368>
 80c:	21 fd       	sbrc	r18, 1
 80e:	02 c0       	rjmp	.+4      	; 0x814 <vfprintf+0x35c>
 810:	80 e2       	ldi	r24, 0x20	; 32
 812:	01 c0       	rjmp	.+2      	; 0x816 <vfprintf+0x35e>
 814:	8b e2       	ldi	r24, 0x2B	; 43
 816:	27 fd       	sbrc	r18, 7
 818:	8d e2       	ldi	r24, 0x2D	; 45
 81a:	b7 01       	movw	r22, r14
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	98 d1       	rcall	.+816    	; 0xb50 <fputc>
 820:	a5 14       	cp	r10, r5
 822:	30 f4       	brcc	.+12     	; 0x830 <vfprintf+0x378>
 824:	b7 01       	movw	r22, r14
 826:	80 e3       	ldi	r24, 0x30	; 48
 828:	90 e0       	ldi	r25, 0x00	; 0
 82a:	92 d1       	rcall	.+804    	; 0xb50 <fputc>
 82c:	5a 94       	dec	r5
 82e:	f8 cf       	rjmp	.-16     	; 0x820 <vfprintf+0x368>
 830:	aa 94       	dec	r10
 832:	f4 01       	movw	r30, r8
 834:	ea 0d       	add	r30, r10
 836:	f1 1d       	adc	r31, r1
 838:	80 81       	ld	r24, Z
 83a:	b7 01       	movw	r22, r14
 83c:	90 e0       	ldi	r25, 0x00	; 0
 83e:	88 d1       	rcall	.+784    	; 0xb50 <fputc>
 840:	a1 10       	cpse	r10, r1
 842:	f6 cf       	rjmp	.-20     	; 0x830 <vfprintf+0x378>
 844:	33 20       	and	r3, r3
 846:	09 f4       	brne	.+2      	; 0x84a <vfprintf+0x392>
 848:	5d ce       	rjmp	.-838    	; 0x504 <vfprintf+0x4c>
 84a:	b7 01       	movw	r22, r14
 84c:	80 e2       	ldi	r24, 0x20	; 32
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	7f d1       	rcall	.+766    	; 0xb50 <fputc>
 852:	3a 94       	dec	r3
 854:	f7 cf       	rjmp	.-18     	; 0x844 <vfprintf+0x38c>
 856:	f7 01       	movw	r30, r14
 858:	86 81       	ldd	r24, Z+6	; 0x06
 85a:	97 81       	ldd	r25, Z+7	; 0x07
 85c:	02 c0       	rjmp	.+4      	; 0x862 <vfprintf+0x3aa>
 85e:	8f ef       	ldi	r24, 0xFF	; 255
 860:	9f ef       	ldi	r25, 0xFF	; 255
 862:	2c 96       	adiw	r28, 0x0c	; 12
 864:	0f b6       	in	r0, 0x3f	; 63
 866:	f8 94       	cli
 868:	de bf       	out	0x3e, r29	; 62
 86a:	0f be       	out	0x3f, r0	; 63
 86c:	cd bf       	out	0x3d, r28	; 61
 86e:	df 91       	pop	r29
 870:	cf 91       	pop	r28
 872:	1f 91       	pop	r17
 874:	0f 91       	pop	r16
 876:	ff 90       	pop	r15
 878:	ef 90       	pop	r14
 87a:	df 90       	pop	r13
 87c:	cf 90       	pop	r12
 87e:	bf 90       	pop	r11
 880:	af 90       	pop	r10
 882:	9f 90       	pop	r9
 884:	8f 90       	pop	r8
 886:	7f 90       	pop	r7
 888:	6f 90       	pop	r6
 88a:	5f 90       	pop	r5
 88c:	4f 90       	pop	r4
 88e:	3f 90       	pop	r3
 890:	2f 90       	pop	r2
 892:	08 95       	ret

00000894 <calloc>:
 894:	0f 93       	push	r16
 896:	1f 93       	push	r17
 898:	cf 93       	push	r28
 89a:	df 93       	push	r29
 89c:	86 9f       	mul	r24, r22
 89e:	80 01       	movw	r16, r0
 8a0:	87 9f       	mul	r24, r23
 8a2:	10 0d       	add	r17, r0
 8a4:	96 9f       	mul	r25, r22
 8a6:	10 0d       	add	r17, r0
 8a8:	11 24       	eor	r1, r1
 8aa:	c8 01       	movw	r24, r16
 8ac:	0d d0       	rcall	.+26     	; 0x8c8 <malloc>
 8ae:	ec 01       	movw	r28, r24
 8b0:	00 97       	sbiw	r24, 0x00	; 0
 8b2:	21 f0       	breq	.+8      	; 0x8bc <calloc+0x28>
 8b4:	a8 01       	movw	r20, r16
 8b6:	60 e0       	ldi	r22, 0x00	; 0
 8b8:	70 e0       	ldi	r23, 0x00	; 0
 8ba:	38 d1       	rcall	.+624    	; 0xb2c <memset>
 8bc:	ce 01       	movw	r24, r28
 8be:	df 91       	pop	r29
 8c0:	cf 91       	pop	r28
 8c2:	1f 91       	pop	r17
 8c4:	0f 91       	pop	r16
 8c6:	08 95       	ret

000008c8 <malloc>:
 8c8:	cf 93       	push	r28
 8ca:	df 93       	push	r29
 8cc:	82 30       	cpi	r24, 0x02	; 2
 8ce:	91 05       	cpc	r25, r1
 8d0:	10 f4       	brcc	.+4      	; 0x8d6 <malloc+0xe>
 8d2:	82 e0       	ldi	r24, 0x02	; 2
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	e0 91 fe 02 	lds	r30, 0x02FE
 8da:	f0 91 ff 02 	lds	r31, 0x02FF
 8de:	20 e0       	ldi	r18, 0x00	; 0
 8e0:	30 e0       	ldi	r19, 0x00	; 0
 8e2:	a0 e0       	ldi	r26, 0x00	; 0
 8e4:	b0 e0       	ldi	r27, 0x00	; 0
 8e6:	30 97       	sbiw	r30, 0x00	; 0
 8e8:	39 f1       	breq	.+78     	; 0x938 <malloc+0x70>
 8ea:	40 81       	ld	r20, Z
 8ec:	51 81       	ldd	r21, Z+1	; 0x01
 8ee:	48 17       	cp	r20, r24
 8f0:	59 07       	cpc	r21, r25
 8f2:	b8 f0       	brcs	.+46     	; 0x922 <malloc+0x5a>
 8f4:	48 17       	cp	r20, r24
 8f6:	59 07       	cpc	r21, r25
 8f8:	71 f4       	brne	.+28     	; 0x916 <malloc+0x4e>
 8fa:	82 81       	ldd	r24, Z+2	; 0x02
 8fc:	93 81       	ldd	r25, Z+3	; 0x03
 8fe:	10 97       	sbiw	r26, 0x00	; 0
 900:	29 f0       	breq	.+10     	; 0x90c <malloc+0x44>
 902:	13 96       	adiw	r26, 0x03	; 3
 904:	9c 93       	st	X, r25
 906:	8e 93       	st	-X, r24
 908:	12 97       	sbiw	r26, 0x02	; 2
 90a:	2c c0       	rjmp	.+88     	; 0x964 <malloc+0x9c>
 90c:	90 93 ff 02 	sts	0x02FF, r25
 910:	80 93 fe 02 	sts	0x02FE, r24
 914:	27 c0       	rjmp	.+78     	; 0x964 <malloc+0x9c>
 916:	21 15       	cp	r18, r1
 918:	31 05       	cpc	r19, r1
 91a:	31 f0       	breq	.+12     	; 0x928 <malloc+0x60>
 91c:	42 17       	cp	r20, r18
 91e:	53 07       	cpc	r21, r19
 920:	18 f0       	brcs	.+6      	; 0x928 <malloc+0x60>
 922:	a9 01       	movw	r20, r18
 924:	db 01       	movw	r26, r22
 926:	01 c0       	rjmp	.+2      	; 0x92a <malloc+0x62>
 928:	ef 01       	movw	r28, r30
 92a:	9a 01       	movw	r18, r20
 92c:	bd 01       	movw	r22, r26
 92e:	df 01       	movw	r26, r30
 930:	02 80       	ldd	r0, Z+2	; 0x02
 932:	f3 81       	ldd	r31, Z+3	; 0x03
 934:	e0 2d       	mov	r30, r0
 936:	d7 cf       	rjmp	.-82     	; 0x8e6 <malloc+0x1e>
 938:	21 15       	cp	r18, r1
 93a:	31 05       	cpc	r19, r1
 93c:	f9 f0       	breq	.+62     	; 0x97c <malloc+0xb4>
 93e:	28 1b       	sub	r18, r24
 940:	39 0b       	sbc	r19, r25
 942:	24 30       	cpi	r18, 0x04	; 4
 944:	31 05       	cpc	r19, r1
 946:	80 f4       	brcc	.+32     	; 0x968 <malloc+0xa0>
 948:	8a 81       	ldd	r24, Y+2	; 0x02
 94a:	9b 81       	ldd	r25, Y+3	; 0x03
 94c:	61 15       	cp	r22, r1
 94e:	71 05       	cpc	r23, r1
 950:	21 f0       	breq	.+8      	; 0x95a <malloc+0x92>
 952:	fb 01       	movw	r30, r22
 954:	93 83       	std	Z+3, r25	; 0x03
 956:	82 83       	std	Z+2, r24	; 0x02
 958:	04 c0       	rjmp	.+8      	; 0x962 <malloc+0x9a>
 95a:	90 93 ff 02 	sts	0x02FF, r25
 95e:	80 93 fe 02 	sts	0x02FE, r24
 962:	fe 01       	movw	r30, r28
 964:	32 96       	adiw	r30, 0x02	; 2
 966:	44 c0       	rjmp	.+136    	; 0x9f0 <malloc+0x128>
 968:	fe 01       	movw	r30, r28
 96a:	e2 0f       	add	r30, r18
 96c:	f3 1f       	adc	r31, r19
 96e:	81 93       	st	Z+, r24
 970:	91 93       	st	Z+, r25
 972:	22 50       	subi	r18, 0x02	; 2
 974:	31 09       	sbc	r19, r1
 976:	39 83       	std	Y+1, r19	; 0x01
 978:	28 83       	st	Y, r18
 97a:	3a c0       	rjmp	.+116    	; 0x9f0 <malloc+0x128>
 97c:	20 91 fc 02 	lds	r18, 0x02FC
 980:	30 91 fd 02 	lds	r19, 0x02FD
 984:	23 2b       	or	r18, r19
 986:	41 f4       	brne	.+16     	; 0x998 <malloc+0xd0>
 988:	20 91 02 02 	lds	r18, 0x0202
 98c:	30 91 03 02 	lds	r19, 0x0203
 990:	30 93 fd 02 	sts	0x02FD, r19
 994:	20 93 fc 02 	sts	0x02FC, r18
 998:	20 91 00 02 	lds	r18, 0x0200
 99c:	30 91 01 02 	lds	r19, 0x0201
 9a0:	21 15       	cp	r18, r1
 9a2:	31 05       	cpc	r19, r1
 9a4:	41 f4       	brne	.+16     	; 0x9b6 <malloc+0xee>
 9a6:	2d b7       	in	r18, 0x3d	; 61
 9a8:	3e b7       	in	r19, 0x3e	; 62
 9aa:	40 91 04 02 	lds	r20, 0x0204
 9ae:	50 91 05 02 	lds	r21, 0x0205
 9b2:	24 1b       	sub	r18, r20
 9b4:	35 0b       	sbc	r19, r21
 9b6:	e0 91 fc 02 	lds	r30, 0x02FC
 9ba:	f0 91 fd 02 	lds	r31, 0x02FD
 9be:	e2 17       	cp	r30, r18
 9c0:	f3 07       	cpc	r31, r19
 9c2:	a0 f4       	brcc	.+40     	; 0x9ec <malloc+0x124>
 9c4:	2e 1b       	sub	r18, r30
 9c6:	3f 0b       	sbc	r19, r31
 9c8:	28 17       	cp	r18, r24
 9ca:	39 07       	cpc	r19, r25
 9cc:	78 f0       	brcs	.+30     	; 0x9ec <malloc+0x124>
 9ce:	ac 01       	movw	r20, r24
 9d0:	4e 5f       	subi	r20, 0xFE	; 254
 9d2:	5f 4f       	sbci	r21, 0xFF	; 255
 9d4:	24 17       	cp	r18, r20
 9d6:	35 07       	cpc	r19, r21
 9d8:	48 f0       	brcs	.+18     	; 0x9ec <malloc+0x124>
 9da:	4e 0f       	add	r20, r30
 9dc:	5f 1f       	adc	r21, r31
 9de:	50 93 fd 02 	sts	0x02FD, r21
 9e2:	40 93 fc 02 	sts	0x02FC, r20
 9e6:	81 93       	st	Z+, r24
 9e8:	91 93       	st	Z+, r25
 9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <malloc+0x128>
 9ec:	e0 e0       	ldi	r30, 0x00	; 0
 9ee:	f0 e0       	ldi	r31, 0x00	; 0
 9f0:	cf 01       	movw	r24, r30
 9f2:	df 91       	pop	r29
 9f4:	cf 91       	pop	r28
 9f6:	08 95       	ret

000009f8 <free>:
 9f8:	cf 93       	push	r28
 9fa:	df 93       	push	r29
 9fc:	00 97       	sbiw	r24, 0x00	; 0
 9fe:	09 f4       	brne	.+2      	; 0xa02 <free+0xa>
 a00:	87 c0       	rjmp	.+270    	; 0xb10 <free+0x118>
 a02:	fc 01       	movw	r30, r24
 a04:	32 97       	sbiw	r30, 0x02	; 2
 a06:	13 82       	std	Z+3, r1	; 0x03
 a08:	12 82       	std	Z+2, r1	; 0x02
 a0a:	c0 91 fe 02 	lds	r28, 0x02FE
 a0e:	d0 91 ff 02 	lds	r29, 0x02FF
 a12:	20 97       	sbiw	r28, 0x00	; 0
 a14:	81 f4       	brne	.+32     	; 0xa36 <free+0x3e>
 a16:	20 81       	ld	r18, Z
 a18:	31 81       	ldd	r19, Z+1	; 0x01
 a1a:	28 0f       	add	r18, r24
 a1c:	39 1f       	adc	r19, r25
 a1e:	80 91 fc 02 	lds	r24, 0x02FC
 a22:	90 91 fd 02 	lds	r25, 0x02FD
 a26:	82 17       	cp	r24, r18
 a28:	93 07       	cpc	r25, r19
 a2a:	79 f5       	brne	.+94     	; 0xa8a <free+0x92>
 a2c:	f0 93 fd 02 	sts	0x02FD, r31
 a30:	e0 93 fc 02 	sts	0x02FC, r30
 a34:	6d c0       	rjmp	.+218    	; 0xb10 <free+0x118>
 a36:	de 01       	movw	r26, r28
 a38:	20 e0       	ldi	r18, 0x00	; 0
 a3a:	30 e0       	ldi	r19, 0x00	; 0
 a3c:	ae 17       	cp	r26, r30
 a3e:	bf 07       	cpc	r27, r31
 a40:	50 f4       	brcc	.+20     	; 0xa56 <free+0x5e>
 a42:	12 96       	adiw	r26, 0x02	; 2
 a44:	4d 91       	ld	r20, X+
 a46:	5c 91       	ld	r21, X
 a48:	13 97       	sbiw	r26, 0x03	; 3
 a4a:	9d 01       	movw	r18, r26
 a4c:	41 15       	cp	r20, r1
 a4e:	51 05       	cpc	r21, r1
 a50:	09 f1       	breq	.+66     	; 0xa94 <free+0x9c>
 a52:	da 01       	movw	r26, r20
 a54:	f3 cf       	rjmp	.-26     	; 0xa3c <free+0x44>
 a56:	b3 83       	std	Z+3, r27	; 0x03
 a58:	a2 83       	std	Z+2, r26	; 0x02
 a5a:	40 81       	ld	r20, Z
 a5c:	51 81       	ldd	r21, Z+1	; 0x01
 a5e:	84 0f       	add	r24, r20
 a60:	95 1f       	adc	r25, r21
 a62:	8a 17       	cp	r24, r26
 a64:	9b 07       	cpc	r25, r27
 a66:	71 f4       	brne	.+28     	; 0xa84 <free+0x8c>
 a68:	8d 91       	ld	r24, X+
 a6a:	9c 91       	ld	r25, X
 a6c:	11 97       	sbiw	r26, 0x01	; 1
 a6e:	84 0f       	add	r24, r20
 a70:	95 1f       	adc	r25, r21
 a72:	02 96       	adiw	r24, 0x02	; 2
 a74:	91 83       	std	Z+1, r25	; 0x01
 a76:	80 83       	st	Z, r24
 a78:	12 96       	adiw	r26, 0x02	; 2
 a7a:	8d 91       	ld	r24, X+
 a7c:	9c 91       	ld	r25, X
 a7e:	13 97       	sbiw	r26, 0x03	; 3
 a80:	93 83       	std	Z+3, r25	; 0x03
 a82:	82 83       	std	Z+2, r24	; 0x02
 a84:	21 15       	cp	r18, r1
 a86:	31 05       	cpc	r19, r1
 a88:	29 f4       	brne	.+10     	; 0xa94 <free+0x9c>
 a8a:	f0 93 ff 02 	sts	0x02FF, r31
 a8e:	e0 93 fe 02 	sts	0x02FE, r30
 a92:	3e c0       	rjmp	.+124    	; 0xb10 <free+0x118>
 a94:	d9 01       	movw	r26, r18
 a96:	13 96       	adiw	r26, 0x03	; 3
 a98:	fc 93       	st	X, r31
 a9a:	ee 93       	st	-X, r30
 a9c:	12 97       	sbiw	r26, 0x02	; 2
 a9e:	4d 91       	ld	r20, X+
 aa0:	5d 91       	ld	r21, X+
 aa2:	a4 0f       	add	r26, r20
 aa4:	b5 1f       	adc	r27, r21
 aa6:	ea 17       	cp	r30, r26
 aa8:	fb 07       	cpc	r31, r27
 aaa:	79 f4       	brne	.+30     	; 0xaca <free+0xd2>
 aac:	80 81       	ld	r24, Z
 aae:	91 81       	ldd	r25, Z+1	; 0x01
 ab0:	84 0f       	add	r24, r20
 ab2:	95 1f       	adc	r25, r21
 ab4:	02 96       	adiw	r24, 0x02	; 2
 ab6:	d9 01       	movw	r26, r18
 ab8:	11 96       	adiw	r26, 0x01	; 1
 aba:	9c 93       	st	X, r25
 abc:	8e 93       	st	-X, r24
 abe:	82 81       	ldd	r24, Z+2	; 0x02
 ac0:	93 81       	ldd	r25, Z+3	; 0x03
 ac2:	13 96       	adiw	r26, 0x03	; 3
 ac4:	9c 93       	st	X, r25
 ac6:	8e 93       	st	-X, r24
 ac8:	12 97       	sbiw	r26, 0x02	; 2
 aca:	e0 e0       	ldi	r30, 0x00	; 0
 acc:	f0 e0       	ldi	r31, 0x00	; 0
 ace:	8a 81       	ldd	r24, Y+2	; 0x02
 ad0:	9b 81       	ldd	r25, Y+3	; 0x03
 ad2:	00 97       	sbiw	r24, 0x00	; 0
 ad4:	19 f0       	breq	.+6      	; 0xadc <free+0xe4>
 ad6:	fe 01       	movw	r30, r28
 ad8:	ec 01       	movw	r28, r24
 ada:	f9 cf       	rjmp	.-14     	; 0xace <free+0xd6>
 adc:	ce 01       	movw	r24, r28
 ade:	02 96       	adiw	r24, 0x02	; 2
 ae0:	28 81       	ld	r18, Y
 ae2:	39 81       	ldd	r19, Y+1	; 0x01
 ae4:	82 0f       	add	r24, r18
 ae6:	93 1f       	adc	r25, r19
 ae8:	20 91 fc 02 	lds	r18, 0x02FC
 aec:	30 91 fd 02 	lds	r19, 0x02FD
 af0:	28 17       	cp	r18, r24
 af2:	39 07       	cpc	r19, r25
 af4:	69 f4       	brne	.+26     	; 0xb10 <free+0x118>
 af6:	30 97       	sbiw	r30, 0x00	; 0
 af8:	29 f4       	brne	.+10     	; 0xb04 <free+0x10c>
 afa:	10 92 ff 02 	sts	0x02FF, r1
 afe:	10 92 fe 02 	sts	0x02FE, r1
 b02:	02 c0       	rjmp	.+4      	; 0xb08 <free+0x110>
 b04:	13 82       	std	Z+3, r1	; 0x03
 b06:	12 82       	std	Z+2, r1	; 0x02
 b08:	d0 93 fd 02 	sts	0x02FD, r29
 b0c:	c0 93 fc 02 	sts	0x02FC, r28
 b10:	df 91       	pop	r29
 b12:	cf 91       	pop	r28
 b14:	08 95       	ret

00000b16 <strnlen_P>:
 b16:	fc 01       	movw	r30, r24
 b18:	05 90       	lpm	r0, Z+
 b1a:	61 50       	subi	r22, 0x01	; 1
 b1c:	70 40       	sbci	r23, 0x00	; 0
 b1e:	01 10       	cpse	r0, r1
 b20:	d8 f7       	brcc	.-10     	; 0xb18 <strnlen_P+0x2>
 b22:	80 95       	com	r24
 b24:	90 95       	com	r25
 b26:	8e 0f       	add	r24, r30
 b28:	9f 1f       	adc	r25, r31
 b2a:	08 95       	ret

00000b2c <memset>:
 b2c:	dc 01       	movw	r26, r24
 b2e:	01 c0       	rjmp	.+2      	; 0xb32 <memset+0x6>
 b30:	6d 93       	st	X+, r22
 b32:	41 50       	subi	r20, 0x01	; 1
 b34:	50 40       	sbci	r21, 0x00	; 0
 b36:	e0 f7       	brcc	.-8      	; 0xb30 <memset+0x4>
 b38:	08 95       	ret

00000b3a <strnlen>:
 b3a:	fc 01       	movw	r30, r24
 b3c:	61 50       	subi	r22, 0x01	; 1
 b3e:	70 40       	sbci	r23, 0x00	; 0
 b40:	01 90       	ld	r0, Z+
 b42:	01 10       	cpse	r0, r1
 b44:	d8 f7       	brcc	.-10     	; 0xb3c <strnlen+0x2>
 b46:	80 95       	com	r24
 b48:	90 95       	com	r25
 b4a:	8e 0f       	add	r24, r30
 b4c:	9f 1f       	adc	r25, r31
 b4e:	08 95       	ret

00000b50 <fputc>:
 b50:	0f 93       	push	r16
 b52:	1f 93       	push	r17
 b54:	cf 93       	push	r28
 b56:	df 93       	push	r29
 b58:	18 2f       	mov	r17, r24
 b5a:	09 2f       	mov	r16, r25
 b5c:	eb 01       	movw	r28, r22
 b5e:	8b 81       	ldd	r24, Y+3	; 0x03
 b60:	81 fd       	sbrc	r24, 1
 b62:	03 c0       	rjmp	.+6      	; 0xb6a <fputc+0x1a>
 b64:	8f ef       	ldi	r24, 0xFF	; 255
 b66:	9f ef       	ldi	r25, 0xFF	; 255
 b68:	20 c0       	rjmp	.+64     	; 0xbaa <fputc+0x5a>
 b6a:	82 ff       	sbrs	r24, 2
 b6c:	10 c0       	rjmp	.+32     	; 0xb8e <fputc+0x3e>
 b6e:	4e 81       	ldd	r20, Y+6	; 0x06
 b70:	5f 81       	ldd	r21, Y+7	; 0x07
 b72:	2c 81       	ldd	r18, Y+4	; 0x04
 b74:	3d 81       	ldd	r19, Y+5	; 0x05
 b76:	42 17       	cp	r20, r18
 b78:	53 07       	cpc	r21, r19
 b7a:	7c f4       	brge	.+30     	; 0xb9a <fputc+0x4a>
 b7c:	e8 81       	ld	r30, Y
 b7e:	f9 81       	ldd	r31, Y+1	; 0x01
 b80:	9f 01       	movw	r18, r30
 b82:	2f 5f       	subi	r18, 0xFF	; 255
 b84:	3f 4f       	sbci	r19, 0xFF	; 255
 b86:	39 83       	std	Y+1, r19	; 0x01
 b88:	28 83       	st	Y, r18
 b8a:	10 83       	st	Z, r17
 b8c:	06 c0       	rjmp	.+12     	; 0xb9a <fputc+0x4a>
 b8e:	e8 85       	ldd	r30, Y+8	; 0x08
 b90:	f9 85       	ldd	r31, Y+9	; 0x09
 b92:	81 2f       	mov	r24, r17
 b94:	19 95       	eicall
 b96:	89 2b       	or	r24, r25
 b98:	29 f7       	brne	.-54     	; 0xb64 <fputc+0x14>
 b9a:	2e 81       	ldd	r18, Y+6	; 0x06
 b9c:	3f 81       	ldd	r19, Y+7	; 0x07
 b9e:	2f 5f       	subi	r18, 0xFF	; 255
 ba0:	3f 4f       	sbci	r19, 0xFF	; 255
 ba2:	3f 83       	std	Y+7, r19	; 0x07
 ba4:	2e 83       	std	Y+6, r18	; 0x06
 ba6:	81 2f       	mov	r24, r17
 ba8:	90 2f       	mov	r25, r16
 baa:	df 91       	pop	r29
 bac:	cf 91       	pop	r28
 bae:	1f 91       	pop	r17
 bb0:	0f 91       	pop	r16
 bb2:	08 95       	ret

00000bb4 <__ultoa_invert>:
 bb4:	fa 01       	movw	r30, r20
 bb6:	aa 27       	eor	r26, r26
 bb8:	28 30       	cpi	r18, 0x08	; 8
 bba:	51 f1       	breq	.+84     	; 0xc10 <__ultoa_invert+0x5c>
 bbc:	20 31       	cpi	r18, 0x10	; 16
 bbe:	81 f1       	breq	.+96     	; 0xc20 <__ultoa_invert+0x6c>
 bc0:	e8 94       	clt
 bc2:	6f 93       	push	r22
 bc4:	6e 7f       	andi	r22, 0xFE	; 254
 bc6:	6e 5f       	subi	r22, 0xFE	; 254
 bc8:	7f 4f       	sbci	r23, 0xFF	; 255
 bca:	8f 4f       	sbci	r24, 0xFF	; 255
 bcc:	9f 4f       	sbci	r25, 0xFF	; 255
 bce:	af 4f       	sbci	r26, 0xFF	; 255
 bd0:	b1 e0       	ldi	r27, 0x01	; 1
 bd2:	3e d0       	rcall	.+124    	; 0xc50 <__ultoa_invert+0x9c>
 bd4:	b4 e0       	ldi	r27, 0x04	; 4
 bd6:	3c d0       	rcall	.+120    	; 0xc50 <__ultoa_invert+0x9c>
 bd8:	67 0f       	add	r22, r23
 bda:	78 1f       	adc	r23, r24
 bdc:	89 1f       	adc	r24, r25
 bde:	9a 1f       	adc	r25, r26
 be0:	a1 1d       	adc	r26, r1
 be2:	68 0f       	add	r22, r24
 be4:	79 1f       	adc	r23, r25
 be6:	8a 1f       	adc	r24, r26
 be8:	91 1d       	adc	r25, r1
 bea:	a1 1d       	adc	r26, r1
 bec:	6a 0f       	add	r22, r26
 bee:	71 1d       	adc	r23, r1
 bf0:	81 1d       	adc	r24, r1
 bf2:	91 1d       	adc	r25, r1
 bf4:	a1 1d       	adc	r26, r1
 bf6:	20 d0       	rcall	.+64     	; 0xc38 <__ultoa_invert+0x84>
 bf8:	09 f4       	brne	.+2      	; 0xbfc <__ultoa_invert+0x48>
 bfa:	68 94       	set
 bfc:	3f 91       	pop	r19
 bfe:	2a e0       	ldi	r18, 0x0A	; 10
 c00:	26 9f       	mul	r18, r22
 c02:	11 24       	eor	r1, r1
 c04:	30 19       	sub	r19, r0
 c06:	30 5d       	subi	r19, 0xD0	; 208
 c08:	31 93       	st	Z+, r19
 c0a:	de f6       	brtc	.-74     	; 0xbc2 <__ultoa_invert+0xe>
 c0c:	cf 01       	movw	r24, r30
 c0e:	08 95       	ret
 c10:	46 2f       	mov	r20, r22
 c12:	47 70       	andi	r20, 0x07	; 7
 c14:	40 5d       	subi	r20, 0xD0	; 208
 c16:	41 93       	st	Z+, r20
 c18:	b3 e0       	ldi	r27, 0x03	; 3
 c1a:	0f d0       	rcall	.+30     	; 0xc3a <__ultoa_invert+0x86>
 c1c:	c9 f7       	brne	.-14     	; 0xc10 <__ultoa_invert+0x5c>
 c1e:	f6 cf       	rjmp	.-20     	; 0xc0c <__ultoa_invert+0x58>
 c20:	46 2f       	mov	r20, r22
 c22:	4f 70       	andi	r20, 0x0F	; 15
 c24:	40 5d       	subi	r20, 0xD0	; 208
 c26:	4a 33       	cpi	r20, 0x3A	; 58
 c28:	18 f0       	brcs	.+6      	; 0xc30 <__ultoa_invert+0x7c>
 c2a:	49 5d       	subi	r20, 0xD9	; 217
 c2c:	31 fd       	sbrc	r19, 1
 c2e:	40 52       	subi	r20, 0x20	; 32
 c30:	41 93       	st	Z+, r20
 c32:	02 d0       	rcall	.+4      	; 0xc38 <__ultoa_invert+0x84>
 c34:	a9 f7       	brne	.-22     	; 0xc20 <__ultoa_invert+0x6c>
 c36:	ea cf       	rjmp	.-44     	; 0xc0c <__ultoa_invert+0x58>
 c38:	b4 e0       	ldi	r27, 0x04	; 4
 c3a:	a6 95       	lsr	r26
 c3c:	97 95       	ror	r25
 c3e:	87 95       	ror	r24
 c40:	77 95       	ror	r23
 c42:	67 95       	ror	r22
 c44:	ba 95       	dec	r27
 c46:	c9 f7       	brne	.-14     	; 0xc3a <__ultoa_invert+0x86>
 c48:	00 97       	sbiw	r24, 0x00	; 0
 c4a:	61 05       	cpc	r22, r1
 c4c:	71 05       	cpc	r23, r1
 c4e:	08 95       	ret
 c50:	9b 01       	movw	r18, r22
 c52:	ac 01       	movw	r20, r24
 c54:	0a 2e       	mov	r0, r26
 c56:	06 94       	lsr	r0
 c58:	57 95       	ror	r21
 c5a:	47 95       	ror	r20
 c5c:	37 95       	ror	r19
 c5e:	27 95       	ror	r18
 c60:	ba 95       	dec	r27
 c62:	c9 f7       	brne	.-14     	; 0xc56 <__ultoa_invert+0xa2>
 c64:	62 0f       	add	r22, r18
 c66:	73 1f       	adc	r23, r19
 c68:	84 1f       	adc	r24, r20
 c6a:	95 1f       	adc	r25, r21
 c6c:	a0 1d       	adc	r26, r0
 c6e:	08 95       	ret

00000c70 <_exit>:
 c70:	f8 94       	cli

00000c72 <__stop_program>:
 c72:	ff cf       	rjmp	.-2      	; 0xc72 <__stop_program>
